<html>
<head>
  <title>Основы языка HTML</title>
   <link rel="stylesheet" type="text/css" href="Style1.css">
   <link rel="stylesheet" type="text/css" href="Text1.css">
   <link rel="SHORTCUT ICON" href="prim/pick.gif" >
 <Style>

  body { background-image: url(prim/fon.png) ;
-moz-background-size: 100%;
   -webkit-background-size: 100%;
   -o-background-size: 100%;
    background-size: 100%;
    }
    </Style>
</head>


<body>
  <div class="form">
	<div class="container">
		<h4><i>
      <table class="raz">
  <tr>
    <td><a href="">________________</a>
    <td><a href="http://localhost/Heilig/Glava.php">На главную</a>
    <td><a href="">________________</a>
  </tr>
</table>
	                                                <hr/><p align="center"><big>Веб-сайтов и веб-приложений</big></p><hr/>


<p style="text-indent:20px"> ASP.NET предоставляет три платформы для создания веб-приложений: веб-форм ASP.NET MVC и веб-страниц ASP.NET. Все три платформы становятся стабильными и полноценного и значительные веб-приложений можно создать с любым из них. Независимо от того, какие framework выбрать вы получите все преимущества и возможности ASP.NET everywhere.

<p style="text-indent:20px">Каждая платформа предназначен для стиля разработки. Один выбранный зависит от сочетания средств программирования (знания, навыки и опыт разработки), тип приложения, который вы создаете и, как вы освоите подхода к разработке.

<p style="text-indent:20px">Ниже приведен обзор каждой из платформ и некоторые идеи о выборе между ними. При желании видео с введением в разделе <a href="https://channel9.msdn.com/Blogs/ASP-NET-Site-Videos/Making-Websites-with-ASPNET">создания веб-сайтов с ASP.NET</a> и <a href="https://channel9.msdn.com/Blogs/ASP-NET-Site-Videos/what-is-web-tools">возможности веб-инструменты?</a><br><br>

  <table border="1">
<tr>
<th></th>
<th>Если у вас есть опыт</th>
<th>Стиль разработки</th>
<th>Опыт</th>
</tr>
<tr>
<td> веб-формы </td>
<td> Win Forms, WPF и .NET </td>
<td> Широкие возможности библиотеки элементов управления, которые инкапсулируют разметки HTML с помощью быстрой разработки </td>
<td> RAD среднего уровня, Дополнительно </td>
</tr>
<tr>
<td> MVC </td>
<td> Ruby на направляющие .NET </td>
<td> Полный контроль над разметки HTML, кода и разметки, разделенных запятыми и упрощает написание тестов. Лучший выбор для мобильных устройств и одной страницы приложений (SPA). </td>
<td> Среднего уровня, Дополнительно </td>
</tr>
<tr>
<td> Веб-страницы </td>
<td> Классический ASP, PHP </td>
<td> HTML-разметка и код вместе в одном файле </td>
<td> Новый, среднего уровня </td>
</tr>
</table> 

                                                       <hr/><p align="center"><big>веб-формы</big></p><hr/>

<p style="text-indent:20px">С веб-форм ASP.NET можно создавать динамические веб-сайты с помощью знакомую модель и перетащите, управляемые событиями.Область конструирования и сотни элементов управления и компонентов позволяют быстро создавать комплексные сайты пользовательским Интерфейсом с доступом к данным.

<p style="text-indent:20px"><a href="https://docs.microsoft.com/ru-ru/aspnet/web-forms/index">Дополнительные сведения о веб-форм</a>

                                                         <hr/><p align="center"><big>MVC</big></p><hr/>

<p style="text-indent:20px">ASP.NET MVC предлагает эффективный, основанный на шаблонах способ создания динамических веб-сайтов, которая позволяет четкого разделения проблем и предоставления пользователям полного контроля над разметкой для гибких разработок. ASP.NET MVC содержит множество функций, позволяющих быстрой, согласованной с TDD разработки для создания сложных приложений, использующих новейшие веб-стандарты.

<p style="text-indent:20px"><a href="https://docs.microsoft.com/ru-ru/aspnet/mvc/index">Дополнительные сведения о MVC</a>

                                                   <hr/><p align="center"><big>Веб-страницы ASP.NET</big></p><hr/>

<p style="text-indent:20px">Веб-страниц ASP.NET и синтаксис Razor обеспечивают быстрый, понятный и простой способ объединения серверного кода с HTML для создания динамических веб-содержимого. Подключения к базам данных, добавляйте видео, ссылки на сайты социальных сетей и содержат множество дополнительные функции, которые помогают создавать прекрасные сайты, которые соответствуют новейшие веб-стандарты.
  
<p style="text-indent:20px"><a href="https://docs.microsoft.com/ru-ru/aspnet/web-pages/index">Дополнительные сведения о веб-страницы</a>

                                        <hr/><p align="center"><big>Примечания о веб-форм, MVC и веб-страницы</big></p><hr/>

<p style="text-indent:20px">Все три платформы ASP.NET основаны на платформе .NET Framework и совместного использования основных функциональных возможностей платформы .NET, ASP.NET. Например все три платформы предоставляют модель безопасности имени входа, исходя из членства, а все три совместно использовать одинаковые возможности для управления запросов, обработка сеансы и т. д, которые являются частью основные функции ASP.NET.
<p style="text-indent:20px">Кроме того три платформ не полностью независимы и выбрав один это не влияет на использование другого. Поскольку платформ могут сосуществовать в одной веб-приложения, не часто отдельных компонентов приложения, написанные с помощью различных платформ.Например обращенной части приложения могут разрабатываться в MVC для оптимизации разметки во время доступа к данным и административные фрагменты разрабатываются в веб-форм, чтобы воспользоваться преимуществами элементов управления данными и доступа к данным простой.

                                                  <hr/><p align="center"><big>Веб-API</big></p><hr/>

<p style="text-indent:20px">Веб-API ASP.NET — это платформа, которая позволяет легко создавать службы HTTP широкого диапазона клиентов, включая браузеры и мобильные устройства. ASP.NET Web API - это идеальная платформа для сборки REST-приложений на базе .NET Framework.

<p style="text-indent:20px"><a href="https://docs.microsoft.com/ru-ru/aspnet/web-api/index">Дополнительные сведения о веб-API</a>

                                      <hr/><p align="center"><big>Технологии реального времени</big></p><hr/>

ASP.NET SignalR представляет собой новую библиотеку для разработчиков в среде ASP.NET, облегчающая функциональные возможности разработки реального времени. SignalR обеспечивает двунаправленный обмен данными между сервером и клиентом. Серверы могут отправлять содержимое мгновенно предоставлять подключенным клиентам, как они станут доступны. SignalR поддерживает веб-сокеты и переключается на другие совместимые методы для старых браузерах. SignalR включает API для управления подключениями (например, подключаться и отключаться событий), группирования подключений и авторизации.

<p style="text-indent:20px"><a href="https://docs.microsoft.com/ru-ru/aspnet/signalr/index">Дополнительные сведения о SignalR</a>

                                       <hr/><p align="center"><big>Мобильных приложений и сайтов</big></p><hr/>

<p style="text-indent:20px">ASP.NET можно включить собственных мобильных приложений с серверной части веб-API, а также мобильных веб-сайтов с помощью гибкий Дизайн платформ, таких как Twitter начальной загрузки. При создании собственного мобильного приложения, легко создавать веб-API на основе JSON-маркер доступа к данным, проверки подлинности и push-уведомлений для вашего приложения. При построении отвечать на запросы сайтов для мобильных устройств, можно использовать любой CSS framework или откройте сетку системе вы предпочитаете, или выбрать мощный мобильной системы, например jQuery Mobile или Sencha и приложения для мобильных устройств с помощью PhoneGap.

<p style="text-indent:20px"><a href="https://docs.microsoft.com/ru-ru/aspnet/mobile/index">Дополнительные сведения о разработке мобильных приложений и сайтов приложений</a>

                                         <hr/><p align="center"><big>Одностраничного приложения</big></p><hr/>

<p style="text-indent:20px">Приложение ASP.NET одной странице (SPA) позволяет создавать приложения, включающие значительные взаимодействие на стороне клиента, с использованием HTML 5, 3, CSS и JavaScript. Visual Studio включает шаблон для создания приложений на одной странице с помощью knockout.js и веб-API ASP.NET. Помимо встроенного шаблона SPA шаблоны, созданные сообществом разработчиков SPA также доступны для загрузки.

<p style="text-indent:20px"><a href="https://docs.microsoft.com/ru-ru/aspnet/single-page-application/index">Дополнительные сведения о разработке приложений для одной страницы</a>

                                                      <hr/><p align="center"><big>WebHooks</big></p><hr/>

<p style="text-indent:20px">Веб-перехватчиков это шаблон упрощенных HTTP, обеспечивая простой pub/sub модель для подключения друг с другом служб веб-API и SaaS. Когда событие происходит в службе, уведомление отправляется в форме запроса HTTP POST зарегистрированных подписчиков.Запрос POST содержит сведения о событии, что делает возможным для получателя выполнить соответствующие действия.
<p style="text-indent:20px">Веб-привязок, предоставляемых большое количество служб, включая Dropbox, GitHub, Instagram, MailChimp, PayPal, Slack, Trello и многое другое. Например веб-перехватчик может указывать, файл был изменен в общий банк данных, или изменение кода зафиксировано в GitHub, или платеж был инициализирован в PayPal или было создано карточку в Trello.

<p style="text-indent:20px"><a href="https://docs.microsoft.com/ru-ru/aspnet/webhooks/index">Дополнительные сведения о веб-перехватчиков</a>


  <table class="raz">
  <tr>
    <td><a href="">________________</a>
    <td><a href="http://localhost/Heilig/Glava.php">На главную</a>
    <td><a href="">________________</a>
  </tr>
</table>